{"version":3,"sources":["MintButton.tsx","HeaderComponent/Header.tsx","WhatIsComponent/WhatIs.tsx","RarityComponent/Rarity.tsx","RoadmapComponent/Roadmap.tsx","TeamListComponent/TeamList.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils.ts","connection.tsx","candy-machine.ts"],"names":["CTAButton","styled","Button","MintButton","onMint","candyMachine","isMinting","setIsMinting","isActive","wallet","useWallet","connection","useConnection","useState","verified","setVerified","useGateway","requestGatewayToken","gatewayStatus","webSocketSubscriptionId","setWebSocketSubscriptionId","clicked","setClicked","useEffect","mint","removeAccountChangeListener","previousGatewayStatus","value","ref","useRef","current","usePrevious","fromStates","GatewayStatus","NOT_REQUESTED","REFRESH_TOKEN_REQUIRED","invalidToStates","UNKNOWN","find","state","console","log","disabled","onClick","gatekeeper","network","gatekeeperNetwork","toBase58","ACTIVE","findGatewayToken","publicKey","gatewayToken","isValid","window","open","getGatewayTokenAddressForOwnerAndGatekeeperNetwork","gatewayTokenAddress","onGatewayTokenChange","Error","variant","isSoldOut","CircularProgress","isPresale","isWhitelistOnly","HeaderContainer","div","Logo","MediaAndWalletContainer","MediaImg","img","DisConnectButton","WalletDisconnectButton","ConnectBtn","WalletDialogButton","WalletIcon","ConnectWalletText","WalletConnected","Header","src","connected","height","width","MainContainer","TextContainer","TextTitle","TextSubTitle","MainImageContainer","KoalaGridImage","attrs","KoalaGridImageSmall","WhatIs","RareScreenMainContainer","RarityTextContainer","RarityImageContainer","RareTab","RareTabEye","RareTabMouth","RareTabHair","RareTabAccessory","RareTabClothes","RareTabHats","RareTabGlasses","RareTabText","TabImage","RareScreen","RoadmapScreenMainContainer","RoadmapTextContainer","RoadmapSlotsContainer","RoadmapSlot","NumberImgRoadmap","SlotText","SlotTitle","SlotSubTitle","RoadmapScreen","TeamScreenMainContainer","TeamTextContainer","TeamMembersContainer","TeamMemberSlot","TeamMemberImg","TeamMemberTextContainer","TeamMemberTextTitle","TeamMemberTextSubtitle","TeamScreen","KoalasImg","ButtonsContainer","ConnectWalletBtn","ConnectWalletIcon","button","SolanaFeaturedContainer","SolanaText","SolanaLogo","Home","props","setBalance","isUserMinting","setIsUserMinting","setCandyMachine","message","severity","undefined","setAlertState","setIsActive","setEndDate","setItemsAvailable","setItemsRedeemed","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","setIsPresale","isValidBalance","setIsValidBalance","setDiscountPrice","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","rpcUrl","rpcHost","anchorWallet","useMemo","signAllTransactions","signTransaction","refreshCandyMachineState","useCallback","commitment","Connection","candyMachineId","getCandyMachineState","cndy","active","goLiveDate","toNumber","Date","getTime","presale","isWLUser","userPrice","price","whitelistMintSettings","discountPrice","anchor","PublicKey","getAtaForMint","token","getTokenAccountBalance","balance","parseInt","amount","tokenMint","valid","gte","getBalance","LAMPORTS_PER_SOL","endSettings","endSettingType","date","toDate","number","limit","Math","min","itemsAvailable","itemsRedeemed","getCollectionPDA","collectionPDA","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","mode","burnEveryTime","expireOnUse","hideDuration","startsWith","beforeTransactions","afterTransactions","document","getElementById","click","program","createAccountsForMint","setupMint","status","err","transaction","awaitTransactionSignatureConfirmation","txTimeout","mintOneToken","mintResult","metadataStatus","mintTxId","provider","metadataKey","remaining","msg","code","location","reload","indexOf","loop","setTimeout","CANDY_MACHINE_PROGRAM","clusterUrl","WalletAdapterNetwork","Devnet","handleTransaction","signatures","sig","equals","sendTransaction","error","broadcastTransaction","options","autoShowModal","val","href","theme","palette","type","colors","black","gray","transparentWhite","white","fonts","inter16Medium","family","size","weight","lineHeight","inter24Medium","inter24SemiBold","inter48SemiBold","process","e","getCandyMachineId","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","autoConnect","DEFAULT_TIMEOUT","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","CIVIC","buyer","findProgramAddress","toBuffer","TOKEN_PROGRAM_ID","getNetworkExpire","Buffer","from","getNetworkToken","SequenceType","getErrorForTransaction","txid","confirmTransaction","getParsedConfirmedTransaction","tx","errors","meta","logMessages","forEach","m","regex","exec","index","lastIndex","length","push","sendTransactions","instructionSet","signersSet","sequenceType","Parallel","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","instructions","signers","Transaction","instruction","add","recentBlockhash","blockhash","setSigners","map","s","partialSign","partiallySignedTransactions","filter","t","fullySignedTransactions","signedTxns","concat","pendingTxns","signedTxnPromise","sendSignedTransaction","signedTransaction","slot","StopOnFailure","Promise","all","txs","result","awaitConfirmation","includesFeePayer","rawTransaction","serialize","skipPreflight","sendRawTransaction","confirmation","getUnixTs","timeout","startTime","done","sleep","simulateResult","simulateTransaction","logs","line","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","queryStatus","confirmations","subId","resolve","reject","onSignature","context","getSignatureStatuses","signatureStatuses","_signatureSubscriptions","removeSignatureListener","ms","TOKEN_METADATA_PROGRAM_ID","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","preflightCommitment","fetchIdl","idl","account","fetch","id","authority","treasury","hiddenSettings","getMasterEdition","getMetadata","getCandyMachineCreator","candyMachineAddress","getCollectionAuthorityRecordPDA","newAuthority","Keypair","generate","userTokenAccountAddress","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","userTokenAccount","setupState","userPayingAccountAddress","remainingAccounts","whitelistToken","metadataAddress","masterEdition","candyMachineCreator","creatorBump","rm","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_SLOT_HASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","collectionPda","collectionData","collectionMint","collectionAuthorityRecord","collectionMetadata","collectionMasterEdition","setCollectionDuringMint","instructionsMatrix","signersMatrix","txns","mintTxn"],"mappings":"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","file":"static/js/main.f5d917fb.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CandyMachineAccount } from './candy-machine';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport {\n  findGatewayToken,\n  getGatewayTokenAddressForOwnerAndGatekeeperNetwork,\n  onGatewayTokenChange,\n  removeAccountChangeListener,\n} from '@identity.com/solana-gateway-ts';\n\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your own styles here\n\nexport const MintButton = ({\n  onMint,\n  candyMachine,\n  isMinting,\n  setIsMinting,\n  isActive,\n}: {\n  onMint: () => Promise<void>;\n  candyMachine?: CandyMachineAccount;\n  isMinting: boolean;\n  setIsMinting: (val: boolean) => void;\n  isActive: boolean;\n}) => {\n  const wallet = useWallet();\n  const connection = useConnection();\n  const [verified, setVerified] = useState(false);\n  const { requestGatewayToken, gatewayStatus } = useGateway();\n  const [webSocketSubscriptionId, setWebSocketSubscriptionId] = useState(-1);\n  const [clicked, setClicked] = useState(false);\n\n  const getMintButtonContent = () => {\n    if (candyMachine?.state.isSoldOut) {\n      return 'SOLD OUT';\n    } else if (isMinting) {\n      return <CircularProgress />;\n    } else if (\n      candyMachine?.state.isPresale ||\n      candyMachine?.state.isWhitelistOnly\n    ) {\n      return 'WHITELIST MINT';\n    }\n\n    return 'MINT';\n  };\n\n  useEffect(() => {\n    const mint = async () => {\n      await removeAccountChangeListener(\n        connection.connection,\n        webSocketSubscriptionId,\n      );\n      await onMint();\n\n      setClicked(false);\n      setVerified(false);\n    };\n    if (verified && clicked) {\n      mint();\n    }\n  }, [\n    verified,\n    clicked,\n    connection.connection,\n    onMint,\n    webSocketSubscriptionId,\n  ]);\n\n  const previousGatewayStatus = usePrevious(gatewayStatus);\n  useEffect(() => {\n    const fromStates = [\n      GatewayStatus.NOT_REQUESTED,\n      GatewayStatus.REFRESH_TOKEN_REQUIRED,\n    ];\n    const invalidToStates = [...fromStates, GatewayStatus.UNKNOWN];\n    if (\n      fromStates.find(state => previousGatewayStatus === state) &&\n      !invalidToStates.find(state => gatewayStatus === state)\n    ) {\n      setIsMinting(true);\n    }\n    console.log('change: ', gatewayStatus);\n  }, [setIsMinting, previousGatewayStatus, gatewayStatus]);\n\n  return (\n    <CTAButton\n      disabled={isMinting || !isActive}\n      onClick={async () => {\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\n          const network =\n            candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();\n          if (network === 'ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6') {\n            if (gatewayStatus === GatewayStatus.ACTIVE) {\n              await onMint();\n            } else {\n              // setIsMinting(true);\n              await requestGatewayToken();\n              console.log('after: ', gatewayStatus);\n            }\n          } else if (\n            network === 'ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE' ||\n            network === 'tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt'\n          ) {\n            setClicked(true);\n            const gatewayToken = await findGatewayToken(\n              connection.connection,\n              wallet.publicKey!,\n              candyMachine.state.gatekeeper.gatekeeperNetwork,\n            );\n\n            if (gatewayToken?.isValid()) {\n              await onMint();\n            } else {\n              window.open(\n                `https://verify.encore.fans/?gkNetwork=${network}`,\n                '_blank',\n              );\n\n              const gatewayTokenAddress =\n                await getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\n                  wallet.publicKey!,\n                  candyMachine.state.gatekeeper.gatekeeperNetwork,\n                );\n\n              setWebSocketSubscriptionId(\n                onGatewayTokenChange(\n                  connection.connection,\n                  gatewayTokenAddress,\n                  () => setVerified(true),\n                  'confirmed',\n                ),\n              );\n            }\n          } else {\n            setClicked(false);\n            throw new Error(`Unknown Gatekeeper Network: ${network}`);\n          }\n        } else {\n          await onMint();\n          setClicked(false);\n        }\n      }}\n      variant=\"contained\"\n    >\n      {getMintButtonContent()}\n    </CTAButton>\n  );\n};\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import styled from \"styled-components\";\nimport { WalletContextState } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton, WalletDisconnectButton } from '@solana/wallet-adapter-material-ui';\n\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    background-color: transparent;\n    height: 94px;\n    \n    @media (max-width: 500px) {\n        height: 54px;  \n    }\n\n`;\n\nconst Logo = styled.div`\n    margin-left: 64px;\n    margin-top: 32px;\n    margin-bottom: 28px;\n    width: 119px;\n    height: 34px;\n    -ms-flex: 1 0 0;\n    flex: 1 0 0;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    letter-spacing: -0.05em;\n    color: white;\n\n    @media (max-width: 500px) {\n        width: 80px;\n        height: 22px;  \n\n        margin-left: 12px;\n        margin-top: 16px;\n        margin-bottom: 16px;\n\n        font-weight: 600;\n        font-size: 16px;\n        line-height: 140%;\n    }\n\n`;\n\nconst MediaAndWalletContainer = styled.div`\n    margin-top: 32px;\n    margin-bottom: 28px;\n    width: 119px;\n    height: 34px;\n\n    display: flex;\n    flex-grow: 0.02;\n\n    flex-wrap: wrap;\n    justify-content: space-between;   \n    padding-left: 20px; \n    padding-right: 20px; \n\n\n    @media (max-width: 500px) {\n        margin-top: 17px;\n        margin-bottom: 17px;\n        margin-right: 12px;\n        width: 92px;\n        height: 20px;\n\n        gap: 16px;\n\n        padding-left: 0px; \n        padding-right: 0px;   \n    }\n\n`;\n\nconst MediaImg = styled.img`\n    width: 24px;\n    height: 24px;\n\n    align-self: center;\n\n    @media (max-width: 500px) {\n        width: 20px;\n        height: 20px;\n\n    }\n\n    :hover {\n        // filter: opacity(1);\n        src: images/WhiteDiscordLogo.png;\n    }\n`;\n\n\nconst DisConnectButton = styled(WalletDisconnectButton)`\n  \n  display: flex !important;\n  flex-direction: row !important;\n\n  margin-right: 64px !important;\n  margin-top: 24px !important;\n  margin-bottom: 24px !important;\n\n  width: 165px !important;\n  min-width:165px !important;\n  height: 46px !important;\n\n  border: 1px solid rgba(255, 255, 255, 0.24) !important;\n  background: transparent !important;\n  border-radius: 8px !important;\n\n  align-items: center !important;\n\n  padding: 12px 16px 12px 16px !important;\n\n  text-transform: none !important;\n\n  font-family: 'Inter' !important;\n  font-style: normal !important;\n  font-weight: 500 !important;\n  font-size: 13px !important;\n  /* or 22px */\n\n  text-align: center !important;\n  letter-spacing: -0.05em !important;\n  color: white !important;\n\n  :hover {\n    background: #494949 !important;\n  }\n\n  @media (max-width: 500px) {\n      display: none !important;\n      border: 1px solid #494949 !important;\n  }\n  \n`;\n\nconst ConnectBtn = styled(WalletDialogButton)`\n\n  display: flex !important;\n  flex-direction: row !important;\n\n  margin-right: 64px !important;\n  margin-top: 24px !important;\n  margin-bottom: 24px !important;\n\n  width: 165px !important;\n  min-width:165px !important;\n  height: 46px !important;\n\n  border: 1px solid rgba(255, 255, 255, 0.24) !important;\n  background: transparent !important;\n  border-radius: 8px !important;\n\n  align-items: center !important;\n\n  padding: 12px 16px 12px 16px !important;\n\n  text-transform: none !important;\n\n  font-family: 'Inter' !important;\n  font-style: normal !important;\n  font-weight: 500 !important;\n  font-size: 16px !important;\n  /* or 22px */\n\n  text-align: center !important;\n  letter-spacing: -0.05em !important;\n  color: white !important;\n\n  :hover {\n    background: #494949 !important;\n    border: 1px solid #494949 !important;\n  }\n\n  @media (max-width: 500px) {\n        display: none !important;\n    }\n`;\n\nconst WalletIcon = styled.div`\n\n    /* Inside auto layout */\n    display: flex !important;\n    \n    justify-content: center !important;\n    align-items: center !important;\n    \n    margin-right: 4px;\n\n`;\n\nconst ConnectWalletText = styled.div`    \n\n    display: flex !important;\n    \n    justify-content: center !important;\n    align-items: center !important;\n    \n    margin-left: 4px;\n\n`;\n\nconst WalletConnected = styled.div`\n\n  display: flex !important;\n  max-height: 22px;\n      \n  justify-content: center !important;\n  align-items: center !important;\n\n`;\n\n\nexport const Header = ({\n    wallet\n}: {\n    wallet: WalletContextState;\n}) => {\n\n    return (\n        <>\n            <HeaderContainer>\n                <Logo>\n                    RareKoalas\n                </Logo>\n                <MediaAndWalletContainer>\n                    <MediaImg src=\"images/DiscordLogoSvg.svg\"/>\n                    <MediaImg src=\"images/TwitterLogo.png\"/>\n                    <MediaImg src=\"images/InstagramLogo.png\"/>\n                </MediaAndWalletContainer>\n\n                {!wallet.connected ?\n                    <ConnectBtn>\n                        <WalletIcon>\n                            <img src=\"images/walletIcon.png\" height=\"20\" width=\"20\" />\n                        </WalletIcon>\n                        <ConnectWalletText>\n                            Connect wallet\n                        </ConnectWalletText>\n                    </ConnectBtn>\n                    :\n                    <DisConnectButton >\n                        {/* <WalletIcon>\n              <img src=\"images/walletIcon.png\" height=\"20\" width=\"20\" />\n            </WalletIcon> */}\n                        <WalletConnected>\n                            Wallet connected\n                        </WalletConnected>\n\n                    </DisConnectButton>\n                }\n            </HeaderContainer>\n        </>\n\n    );\n};","import styled from \"styled-components\";\n\n\nexport const MainContainer = styled.div`\n\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    height: 792px;\n    align-items: center;\n\n    // background: red;\n\n    padding: 0px;\n    gap: 56px;\n\n    @media (max-width: 500px) {\n        gap: 27px; \n        \n        height: 473px;\n    }\n`;\n\n\nexport const TextContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    \n    // background: blue;\n    width: 977px;\n    height: 156px;\n    margin-top: 72px;\n    // margin-bottom: 56px;\n\n    gap: 16px;\n\n    @media (max-width: 500px) {\n        gap: 12px;\n        \n        width: 80%;\n        height: 136px;\n\n        // margin-bottom: 27px;\n    }\n\n`;\n\n\nexport const TextTitle = styled.div`\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 40px;\n    line-height: 140%;\n    /* identical to box height, or 56px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #FFFFFF;\n\n    flex: none;\n    order: 0;\n    align-self: stretch;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        font-size: 24px;\n    }\n\n`;\n\nexport const TextSubTitle = styled.div`\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 140%;\n    /* or 28px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #7D7D7D;\n\n    flex: none;\n    order: 1;\n    align-self: stretch;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        font-size: 12px;\n    }\n`;\n\nexport const MainImageContainer = styled.div`\n    width: 1312px;\n    height: 437px;\n\n    display: flex;\n    // flex-direction: row;\n    flex-wrap: wrap;\n\n    // justify-content: space-between;\n\n    @media (max-width: 500px) {\n        width: 296px;\n        height: 192px;\n    }\n\n`;\n\nconst KoalaGridImage = styled.img.attrs({\n    src: 'images/NFT_Grid.png'\n})`\n    width: 1312px;\n    height: 437px;\n\n    align-self: center;\n\n    @media (max-width: 500px) {\n        display: none;\n    }\n`;\n\nconst KoalaGridImageSmall = styled.img.attrs({\n    src: 'images/Koalas_grid_small.png'\n})`\n\n    display: none;\n\n    @media (max-width: 500px) {\n\n        display: inline;\n\n        width: 296px;\n        height: 192px;\n\n        align-self: center;\n\n\n    }\n`;\n\n\n\nexport const WhatIs = () => {\n    return (\n        <>\n        <MainContainer>\n            <TextContainer>\n                <TextTitle>\n                    What kind of collection is it?\n                </TextTitle>\n                <TextSubTitle>\n                \"RareKoalas\" are a collection of 10,000 unique characters that are richly varied in appearance as well as their rare characteristics. Buying each koala will allow you to contribute to the conservation of these cute animals. \n                After minting of all the characters, we will donate <b>5% of the proceeds</b> to a koala protection fund, which we will choose with you!\n                </TextSubTitle>\n\n            </TextContainer>\n            <MainImageContainer>\n                {/* <img src=\"images/NFT_Grid.png\" width=\"1312\" height=\"437\"/> */}\n                <KoalaGridImage/>\n                <KoalaGridImageSmall/>\n            </MainImageContainer>\n            \n        </MainContainer>\n        \n      </>\n  \n    );\n  };","import styled from \"styled-components\";\nimport { MainContainer, TextContainer, TextTitle, TextSubTitle, MainImageContainer } from \"../WhatIsComponent/WhatIs\";\n\nconst RareScreenMainContainer = styled(MainContainer)`\n    height: 658px;\n\n    @media (max-width: 500px) {\n        gap: 40px; \n        height: 329px;\n    }\n\n`;\n\nconst RarityTextContainer = styled(TextContainer)`\n    // margin-bottom: 48px;\n    gap: 16px;\n\n    @media (max-width: 500px) {\n        gap: 12px;\n        \n        width: 80%;\n        height: 114px;\n\n    }\n`;\n\nconst RarityImageContainer = styled(MainImageContainer)`    \n    height: 166px;\n    justify-content: center;\n    gap: 32px;\n\n    @media (max-width: 500px) {\n        \n        overflow-x: scroll;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        \n        width: 100%;\n        height: 48px;\n\n        margin: 10px 0px 10px 0px;\n\n        padding-left: 12px;\n\n        -ms-overflow-style: none;\n        scrollbar-width: none;\n        \n        ::-webkit-scrollbar {\n            display: none;\n        }\n    }\n\n\n`;\n\nconst RareTab = styled.div`\n    box-sizing: border-box;\n\n    /* Auto layout */\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 12px 32px;\n    gap: 11px;\n\n    height: 67px;\n    \n    border: 1px solid #7D7D7D;\n    border-radius: 100px;\n\n    @media (max-width: 500px) {\n        height: 48px;\n        padding: 8px 16px;\n    }\n\n`;\n\n\nconst RareTabEye = styled(RareTab)`\n    width: 254px;\n\n    @media (max-width: 500px) {\n        min-width: 184px;\n    }\n`;\n\nconst RareTabMouth = styled(RareTab)`\n    width: 279px;\n\n    @media (max-width: 500px) {\n        min-width: 204px;\n    }\n`;\n\nconst RareTabHair = styled(RareTab)`\n    width: 255px;\n\n    @media (max-width: 500px) {\n        min-width: 185px;\n    }\n`;\n\nconst RareTabAccessory = styled(RareTab)`\n    width: 294px;\n\n    @media (max-width: 500px) {\n        min-width: 216px;\n    }\n`;\n\nconst RareTabClothes = styled(RareTab)`\n    width: 274px;\n\n    @media (max-width: 500px) {\n        min-width: 200px;\n    }\n`;\n\nconst RareTabHats = styled(RareTab)`\n    width: 232px;\n\n    @media (max-width: 500px) {\n        min-width: 167px;\n    }\n`;\n\nconst RareTabGlasses = styled(RareTab)`\n    width: 296px;\n    align-self: flex-start;\n\n    @media (max-width: 500px) {\n        min-width: 217px;\n    }\n`;\n\n\nconst RareTabText = styled.div`\n    height: 28px;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 140%;\n    /* identical to box height, or 28px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #FFFFFF;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 1;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        height: 22px;\n        \n        font-size: 16px;\n    }\n\n`;\n\nconst TabImage = styled.img`\n\n    width: 43px;\n    height: 43px;\n\n    flex: none;\n    order: 0;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        width: 32px;\n        height: 32px;\n    }\n`;\n\n\n\nexport const RareScreen = () => {\n    return (\n        <>\n            <RareScreenMainContainer>\n                <RarityTextContainer>\n                    <TextTitle>\n                        Rarity\n                    </TextTitle>\n                    <TextSubTitle>\n                        The current collection has a wide variation of elements that allows each koala to stand out from the other. Each koala has 7 main categories of elements, the variations within which have their own rarity\n                    </TextSubTitle>\n\n                </RarityTextContainer>\n                <RarityImageContainer>\n                    <RareTabEye>\n\n                        <TabImage src=\"images/EyesRare.png\" />\n\n                        <RareTabText>\n                            5 eye variations\n                        </RareTabText>\n                    </RareTabEye>\n                    <RareTabMouth>\n                        <TabImage src=\"images/Mouth.png\" />\n                        <RareTabText>\n                            5 mouth variations\n                        </RareTabText>\n                    </RareTabMouth>\n                    <RareTabHair>\n                        <TabImage src=\"images/BodyRare.png\" />\n                        <RareTabText>\n                            5 hair variations\n                        </RareTabText>\n                    </RareTabHair>\n                    <RareTabAccessory>\n                        <TabImage src=\"images/AccessoriesRare.png\" />\n                        <RareTabText>\n                            4 accessory options\n                        </RareTabText>\n                    </RareTabAccessory>\n                    <RareTabClothes>\n                        <TabImage src=\"images/ClothesRare.png\" />\n                        <RareTabText>\n                            4 clothing options\n                        </RareTabText>\n                    </RareTabClothes>\n                    <RareTabHats>\n                        <TabImage src=\"images/HatsRare.png\" />\n                        <RareTabText>\n                            4 hat options\n                        </RareTabText>\n                    </RareTabHats>\n                    <RareTabGlasses>\n                        <TabImage src=\"images/GlassesRare.png\" />\n                        <RareTabText>\n                            3 variants of glasses\n                        </RareTabText>\n                    </RareTabGlasses>\n                </RarityImageContainer>\n\n\n            </RareScreenMainContainer>\n\n        </>\n\n    );\n};","import styled from \"styled-components\";\nimport { MainContainer, TextContainer, TextTitle, TextSubTitle, MainImageContainer } from \"../WhatIsComponent/WhatIs\";\n\n\nconst RoadmapScreenMainContainer = styled(MainContainer)`\n    height: 988px;\n    gap: 48px;\n\n    @media (max-width: 500px) {\n        gap: 40px; \n        height: 514px;\n    }\n`;\n\nconst RoadmapTextContainer = styled(TextContainer)`\n    height: 114px;\n`;\n\n\nconst RoadmapSlotsContainer = styled(MainImageContainer)`    \n    height: 640px;\n    justify-content: center;\n    gap: 24px 32px;\n\n    @media (max-width: 500px) {\n        \n        overflow-x: scroll;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        \n        width: 100%;\n        height: 239px;\n\n        gap: 11px;\n\n        padding-left: 12px;\n\n        // margin: 10px 0px 10px 0px;\n\n        -ms-overflow-style: none;\n        scrollbar-width: none;\n        \n        ::-webkit-scrollbar {\n            display: none;\n        }\n    }\n`;\n\n\nconst RoadmapSlot = styled.div`\n    box-sizing: border-box;\n\n    /* Auto layout */\n\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    width: 640px;\n    height: 308px;\n\n    padding: 32px;\n\n    border: 1px solid #7D7D7D;\n    border-radius: 24px;\n\n    gap: 24px;\n\n    @media (max-width: 500px) {\n        width: 264px;\n        height: 239px;\n\n        padding: 16px;\n\n        gap: 16px;\n    }\n\n`;\n\n\n\nconst NumberImgRoadmap = styled.img`\n    flex: none;\n    order: 0;\n    flex-grow: 0;\n\n    width: 70px;\n    height: 70px;\n\n    @media (max-width: 500px) {\n        width: 40px;\n        height: 40px;\n    }\n\n`;\n\nconst SlotText = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 16px;\n\n    width: 576px;\n    height: 150px;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 1;\n    flex-grow: 0;\n\n    // margin-top: 24px;\n\n    @media (max-width: 500px) {\n        width: 232px;\n        height: 119px;\n        \n        gap: 4px;\n    }\n\n`;\n\nconst SlotTitle = styled.div`\n    // width: 576px;\n    // height: 34px;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 140%;\n    /* identical to box height, or 34px */\n\n    letter-spacing: -0.05em;\n\n    color: #FFFFFF;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 0;\n    align-self: stretch;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        font-size: 20px;\n    }\n`;\n\n\nconst SlotSubTitle = styled.div`\n    // width: 576px;\n    // height: 100px;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 140%;\n    /* or 25px */\n\n    letter-spacing: -0.05em;\n\n    color: #7D7D7D;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 1;\n    align-self: stretch;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        font-size: 12px;\n    }\n`;\n\n\n\nexport const RoadmapScreen = () => {\n    return (\n        <>\n            <RoadmapScreenMainContainer>\n                <RoadmapTextContainer>\n                    <TextTitle>\n                        RareKoalas Roadmap\n                    </TextTitle>\n                    <TextSubTitle>\n                        We have a small and quick-to-implement roadmap that describes what we want to achieve. So try not to miss the opportunity to get your unique koala and contribute to the protection of these little creatures!\n                    </TextSubTitle>\n\n                </RoadmapTextContainer>\n                <RoadmapSlotsContainer>\n                    <RoadmapSlot>\n                        <NumberImgRoadmap src=\"images/RoadNumber1.png\" />\n                        <SlotText>\n                            <SlotTitle>\n                                50 koalas giveaway!\n                            </SlotTitle>\n                            <SlotSubTitle>\n                                For a short time we will launch a public mint, where everyone can get a unique koala from the collection absolutely free of charge. To do this on this page you need to connect your wallet and make a free transaction to get a unique rare koala! Important: a Solana network fee will be charged\n                            </SlotSubTitle>\n\n                        </SlotText>\n\n                    </RoadmapSlot>\n                    <RoadmapSlot>\n                        <NumberImgRoadmap src=\"images/RoadNumber2.png\" />\n                        <SlotText>\n                            <SlotTitle>\n                                Public mint\n                            </SlotTitle>\n                            <SlotSubTitle>\n                                One day after the free koala giveaway ends, we will launch a public paid mint that will last for 1 week. Everyone will be able to get their own koala and contribute to the protection of these animals by making a purchase transaction for this page\n                            </SlotSubTitle>\n\n                        </SlotText>\n\n                    </RoadmapSlot>\n                    <RoadmapSlot>\n                        <NumberImgRoadmap src=\"images/RoadNumber3.png\" />\n                        <SlotText>\n                            <SlotTitle>\n                                Choosing a way to help the koalas\n                            </SlotTitle>\n                            <SlotSubTitle>\n                                Each owner's koala will allow him or her to take part in a vote that will determine how together we can help protect endangered animals. Having 1 koala will allow you to vote for the animal welfare fund to which we will donate 5% of the money raised\n                            </SlotSubTitle>\n\n                        </SlotText>\n\n                    </RoadmapSlot>\n                    <RoadmapSlot>\n                        <NumberImgRoadmap src=\"images/RoadNumber4.png\" />\n                        <SlotText>\n                            <SlotTitle>\n                                Donate 5% of our earnings to help the koalas\n                            </SlotTitle>\n                            <SlotSubTitle>\n                                Once the survey is completed, we will transfer 5% of the fees to the selected Koala Fund. Once the transaction is completed, we will post a confirmation on our website\n                            </SlotSubTitle>\n\n                        </SlotText>\n\n                    </RoadmapSlot>\n\n                </RoadmapSlotsContainer>\n\n\n            </RoadmapScreenMainContainer>\n\n        </>\n\n    );\n};","import styled from \"styled-components\";\nimport { MainContainer, TextContainer, TextTitle, TextSubTitle, MainImageContainer } from \"../WhatIsComponent/WhatIs\";\n\n\nconst TeamScreenMainContainer = styled(MainContainer)`\n    height: 745px;\n    gap: 48px;\n\n    @media (max-width: 500px) {\n        height: 514px;\n        gap: 40px;\n    }\n`;\n\nconst TeamTextContainer = styled(TextContainer)`\n\n@media (max-width: 500px) {\n\n    height: 94px;\n\n    justify-content: flex-start;\n}\n`;\n\nconst TeamMembersContainer = styled(MainImageContainer)`    \n    height: 391px;\n    justify-content: center;\n    gap: 24px 32px;\n    \n    @media (max-width: 500px) {\n        \n        overflow-x: scroll;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        \n        width: 100%;\n        height: 202px;\n\n        gap: 12px;\n\n        padding-left: 12px;\n\n        // margin: 10px 0px 10px 0px;\n\n        -ms-overflow-style: none;\n        scrollbar-width: none;\n        \n        ::-webkit-scrollbar {\n            display: none;\n        }\n    }\n`;\n\nconst TeamMemberSlot = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    height: 391px;\n    width: 307px;\n\n    gap: 16px;\n\n    @media (max-width: 500px) {\n        width: 128px;\n        height: 202px;\n\n        gap: 8px;\n    }\n\n`;\n\nconst TeamMemberImg = styled.img`\n\n    width: 304px;\n    height: 304px;\n\n    @media (max-width: 500px) {\n        width: 128px;\n        height: 128px;\n\n    }\n\n`;\n\nconst TeamMemberTextContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0px;\n    gap: 4px;\n\n    width: 307px;\n    height: 71px;\n\n    @media (max-width: 500px) {\n        height: 66px;\n        width: 128px;\n    }\n`;\n\nconst TeamMemberTextTitle = styled.div`\n    // width: 307px;\n    // height: 45px;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 140%;\n    /* identical to box height, or 45px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #FFFFFF;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 0;\n    align-self: stretch;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        font-size: 20px;\n    }\n\n`;\n\nconst TeamMemberTextSubtitle = styled.div`\n    // width: 307px;\n    // height: 22px;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 140%;\n    /* or 22px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #7D7D7D;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 1;\n    align-self: stretch;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n        font-size: 12px;\n    }\n`;\n\n\nexport const TeamScreen = () => {\n    return (\n        <>\n        <TeamScreenMainContainer>\n            <TeamTextContainer>\n            <TextTitle>\n                        RareKoalas Team\n                    </TextTitle>\n                    <TextSubTitle>\n                        We are the ones who use creativity and a lot of experience to create useful products for the web3 in Solana!\n                    </TextSubTitle>\n\n            </TeamTextContainer>\n            <TeamMembersContainer>\n                <TeamMemberSlot>\n                    <TeamMemberImg src=\"images/TeamMember1.png\"/>\n                        {/* <img src=\"images/TeamMember1.png\" width=\"304\" height=\"304\"/>\n                    </TeamMemberImg> */}\n                    <TeamMemberTextContainer>\n                        <TeamMemberTextTitle>\n                            bluzir\n                        </TeamMemberTextTitle>\n                        <TeamMemberTextSubtitle>\n                            A big fan of a cucumber bear\n                        </TeamMemberTextSubtitle>\n\n                    </TeamMemberTextContainer>\n\n                </TeamMemberSlot>\n\n                <TeamMemberSlot>\n                <TeamMemberImg src=\"images/TeamMember2.png\"/>\n                    <TeamMemberTextContainer>\n                        <TeamMemberTextTitle>\n                            pkrvs\n                        </TeamMemberTextTitle>\n                        <TeamMemberTextSubtitle>\n                            Like koalas\n                        </TeamMemberTextSubtitle>\n\n                    </TeamMemberTextContainer>\n\n                </TeamMemberSlot>\n\n                <TeamMemberSlot>\n                <TeamMemberImg src=\"images/TeamMember3.png\"/>\n                    <TeamMemberTextContainer>\n                        <TeamMemberTextTitle>\n                            maikyman\n                        </TeamMemberTextTitle>\n                        <TeamMemberTextSubtitle>\n                            Like koalas and a cucumber bear\n                        </TeamMemberTextSubtitle>\n\n                    </TeamMemberTextContainer>\n\n                </TeamMemberSlot>\n                \n\n\n            </TeamMembersContainer>\n\n\n        </TeamScreenMainContainer>\n\n        </>\n    )\n};","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as anchor from '@project-serum/anchor';\n\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { LinearProgress, Chip } from \"@material-ui/core\";\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Commitment,\n  Connection,\n  PublicKey,\n  Transaction,\n  LAMPORTS_PER_SOL,\n} from '@solana/web3.js';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletMultiButton } from '@solana/wallet-adapter-material-ui';\nimport {\n  awaitTransactionSignatureConfirmation,\n  CANDY_MACHINE_PROGRAM,\n  CandyMachineAccount,\n  createAccountsForMint,\n  getCandyMachineState,\n  getCollectionPDA,\n  mintOneToken,\n  SetupState,\n} from './candy-machine';\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\nimport { MintCountdown } from './MintCountdown';\nimport { MintButton } from './MintButton';\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport { sendTransaction } from './connection';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\n\nimport { Header } from './HeaderComponent/Header';\nimport { CollectionPreview } from './CollectionPreviewComponent/CollectionPreview';\nimport { WhatIs } from './WhatIsComponent/WhatIs';\nimport { RareScreen } from './RarityComponent/Rarity';\nimport { RoadmapScreen } from './RoadmapComponent/Roadmap';\nimport { TeamScreen } from './TeamListComponent/TeamList';\n\nimport { WalletDialogButton, WalletDisconnectButton } from '@solana/wallet-adapter-material-ui';\n\nconst MainContainer = styled.div`\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n\n    // background: red;\n    background-image: url(images/CollectionPreviewBackground.png);\n    background-size: contain;\n    background-position: center ;\n    background-repeat: no-repeat;\n\n    height: 900px;\n\n    margin-top:  -94px;\n\n    @media (max-width: 500px) {\n      background-image: none;\n\n      height: 568px;\n\n    }\n\n`;\n\nconst KoalasImg = styled.img.attrs({\n  src: 'images/KoalasSmall.png'\n})`\n  display: none;\n\n  @media (max-width: 500px) {\n\n      display: inline;\n      width: 95%;\n      height: 115px;\n      align-self: start;\n      \n\n      margin-top: 64px;\n\n  }\n`;\n\nconst TextContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    \n    // padding: 0px;\n    gap: 16px;\n    // background: red;\n    width: 976px;\n    height: 175px;\n\n\n    @media (max-width: 500px) {\n      width: 80%;\n      gap: 12px;\n    }\n\n`;\n\n\nconst TextTitle = styled.div`\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 48px;\n    line-height: 140%;\n    /* or 67px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #FFFFFF;\n\n    flex: none;\n    order: 0;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n      height: 78px;\n      \n      font-size: 28px;\n      margin-top: 24px;\n      align-self: stretch;\n    }\n\n`;\n\nconst TextSubTitle = styled.div`\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 140%;\n    /* or 67px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #7D7D7D;\n\n    flex: none;\n    order: 1;\n    flex-grow: 0;\n\n    @media (max-width: 500px) {\n      height: 85px;\n\n      font-size: 12px;\n      // margin-top: 24px;\n      align-self: stretch;\n    }\n\n`;\n\nconst ButtonsContainer = styled.div`\n\n    display: flex;\n    // flex-direction: column;\n    flex-wrap: wrap;\n    \n    // padding: 0px;\n    // gap: 16px;\n    // background: red;\n    width: 366px;\n    height: 46px;\n\n    // background: red;\n    margin-top: 64px;\n    justify-content: center;\n\n    @media (max-width: 500px) {\n      margin-top: 52px;\n    }\n`;\n\n\nconst ConnectWalletBtn = styled(WalletDialogButton)`\n    display: flex !important;\n    flex-direction: row !important;\n    align-items: center !important;\n    padding: 12px 16px !important;\n    gap: 8px !important;\n    // max-width: 165px !important;\n    // min-width: 165px !important;\n    max-height: 46px !important;\n\n\n    height: 46px !important;\n\n    background: #FFFFFF !important;\n    border-radius: 8px !important;\n    border-color: transparent !important;\n\n    text-transform: none !important;\n\n    :hover {\n      background: #CFCFCF !important;\n    }\n\n    @media (max-width: 500px) {\n      width: 100% !important;\n      align-self: center !important;\n    }\n`;\n\nconst OpenSeaBtn = styled.button`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 12px 16px;\n    gap: 8px;\n\n    max-width: 185px;\n    min-width: 185px;\n    max-height: 46px;\n\n    height: 46px;\n\n    background: #FFFFFF;\n    border-radius: 8px;\n    border-color: transparent;\n`;\n\nconst ConnectWalletIcon = styled.div`\n    flex: none;\n    order: 0;\n    flex-grow: 0;\n    // background: red;\n    width: 20px;\n    height: 20px;\n\n    background-image: url(images/walletIconWhite.png);\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n\n    margin-right: 4px;\n`;\n\nconst ConnectWalletText = styled.div`\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 140%;\n    /* or 22px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #000000;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 1;\n    flex-grow: 0;\n\n    margin-left: 4px;\n`;\n\nconst OpenSeaIcon = styled.div`\n    width: 20px;\n    height: 20px;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 0;\n    flex-grow: 0;\n\n    background-image: url(images/OpenSeaImageBlack.png);\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\nconst OpenSeaText = styled.div`\n    width: 125px;\n    height: 22px;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 140%;\n    /* or 22px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #000000;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 1;\n    flex-grow: 0;\n`;\n\n\nconst SolanaFeaturedContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 4px;\n\n    position: absolute;\n    height: 23px;\n    top: calc(50% - 23px/2 + 302.5px);\n\n    height: 23px;\n\n    // margin-top: 14px;\n\n    @media (max-width: 500px) {\n      margin-top: 24px;\n      \n      position: static;\n    }\n\n`;\n\n\nconst SolanaText = styled.div`\n    width: 66px;\n    height: 22px;\n\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 140%;\n    /* or 22px */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    color: #7D7D7D;\n\n\n    /* Inside auto layout */\n\n    flex: none;\n    order: 0;\n    flex-grow: 0;\n`;\n\nconst SolanaLogo = styled.div`\nwidth: 134px;\nheight: 23px;\n\n\n/* Inside auto layout */\n\nflex: none;\norder: 1;\nflex-grow: 0;\n\n    background-image: url(images/SolanaLogoImage.png);\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\n// const ConnectButton = styled(WalletMultiButton)`\n// border-radius: 18px !important;\n// padding: 6px 16px;\n// background-color: #4E44CE;\n// margin: 0 auto;\n// `;\n\n// const WalletContainer = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   flex-wrap: wrap;\n//   justify-content: center;\n// `;\n\n// const WalletAmount = styled.div`\n//   color: black;\n//   width: auto;\n//   padding: 5px 5px 5px 16px;\n//   min-width: 48px;\n//   min-height: auto;\n//   border-radius: 22px;\n//   background-color: var(--main-text-color);\n//   box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\n//   box-sizing: border-box;\n//   transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n//   font-weight: 500;\n//   line-height: 1.75;\n//   text-transform: uppercase;\n//   border: 0;\n//   margin: 0;\n//   display: inline-flex;\n//   outline: 0;\n//   position: relative;\n//   align-items: center;\n//   user-select: none;\n//   vertical-align: middle;\n//   justify-content: flex-start;\n//   gap: 10px;\n// `;\n\n// const Wallet = styled.ul`\n//   flex: 0 0 auto;\n//   margin: 0;\n//   padding: 0;\n// `;\n\n// const MintContainer = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   flex: 1 1 auto;\n//   flex-wrap: wrap;\n//   gap: 20px;\n// `; // add your owns styles here\n\n// const MainContainer = styled.div`\n//   // display: flex;\n//   // flex-direction: column;\n//   // margin-top: 20px;\n//   // margin-bottom: 20px;\n//   // margin-right: 4%;\n//   // margin-left: 4%;\n//   // text-align: center;\n//   // justify-content: center;\n\n//   position: relative;\n//   // width: 1440px;\n//   // height: 4983px;\n\n//   background: #0F0F0F;\n// `;\n\n\n// const Menu = styled.ul`\n//   list-style: none;\n//   display: inline-flex;\n//   flex: 1 0 auto;\n\n//   li {\n//     margin: 0 12px;\n\n//     a {\n//       color: var(--main-text-color);\n//       list-style-image: none;\n//       list-style-position: outside;\n//       list-style-type: none;\n//       outline: none;\n//       text-decoration: none;\n//       text-size-adjust: 100%;\n//       touch-action: manipulation;\n//       transition: color 0.3s;\n//       padding-bottom: 15px;\n\n//       img {\n//         max-height: 26px;\n//       }\n//     }\n\n//     a:hover, a:active {\n//       color: rgb(131, 146, 161);\n//       border-bottom: 4px solid var(--title-text-color);\n//     }\n\n//   }\n// `;\n\n// const DesContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   flex: 1 1 auto;\n//   gap: 20px;\n// `;\n\n// const Price = styled(Chip)`\n//   position: absolute;\n//   margin: 5px;\n//   font-weight: bold;\n//   font-size: 1.2em !important;\n//   font-family: 'Patrick Hand', cursive !important;\n// `;\n\n// const Image = styled.img`\n//   height: 400px;\n//   width: auto;\n//   border-radius: 7px;\n//   box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n// `;\n\n// const BorderLinearProgress = styled(LinearProgress)`\n//   margin: 20px;\n//   height: 10px !important;\n//   border-radius: 30px;\n//   border: 2px solid white;\n//   box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n//   background-color:var(--main-text-color) !important;\n\n//   > div.MuiLinearProgress-barColorPrimary{\n//     background-color:var(--title-text-color) !important;\n//   }\n\n//   > div.MuiLinearProgress-bar1Determinate {\n//     border-radius: 30px !important;\n//     background-image: linear-gradient(270deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.5));\n//   }\n// `;\n\n// const ShimmerTitle = styled.h1`\n//   margin: 20px auto;\n//   text-transform: uppercase;\n//   animation: glow 2s ease-in-out infinite alternate;\n//   color: var(--main-text-color);\n//   @keyframes glow {\n//     from {\n//       text-shadow: 0 0 20px var(--main-text-color);\n//     }\n//     to {\n//       text-shadow: 0 0 30px var(--title-text-color), 0 0 10px var(--title-text-color);\n//     }\n//   }\n// `;\n\n// const GoldTitle = styled.h2`\n//   color: var(--title-text-color);\n// `;\n\n// const LogoAligner = styled.div`\n//   display: flex;\n//   align-items: center;\n\n//   img {\n//     max-height: 35px;\n//     margin-right: 10px;\n//   }\n// `;\n\n// const Logo = styled.div`\n//   flex: 0 0 auto;\n\n//   img {\n//     height: 60px;\n//   }\n// `;\n\n// const MintButtonContainer = styled.div`\n//   button.MuiButton-contained:not(.MuiButton-containedPrimary).Mui-disabled {\n//     color: #464646;\n//   }\n\n//   button.MuiButton-contained:not(.MuiButton-containedPrimary):hover,\n//   button.MuiButton-contained:not(.MuiButton-containedPrimary):focus {\n//     -webkit-animation: pulse 1s;\n//     animation: pulse 1s;\n//     box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);\n//   }\n\n//   @-webkit-keyframes pulse {\n//     0% {\n//       box-shadow: 0 0 0 0 #ef8f6e;\n//     }\n//   }\n\n//   @keyframes pulse {\n//     0% {\n//       box-shadow: 0 0 0 0 #ef8f6e;\n//     }\n//   }\n// `;\n\n// const NFT = styled(Paper)`\n//   min-width: 500px;\n//   padding: 5px 20px 20px 20px;\n//   flex: 1 1 auto;\n//   background-color: var(--card-background-color) !important;\n//   box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22) !important;\n// `;\n\n// const Des = styled(NFT)`\n//   text-align: left;\n//   padding-top: 0px;\n// `;\n\n\n// const Card = styled(Paper)`\n//   display: inline-block;\n//   background-color: var(card-background-lighter-color) !important;\n//   margin: 5px;\n//   min-width: 40px;\n//   padding: 24px;\n//   h1{\n//     margin:0px;\n//   }\n// `;\n\n\n\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isUserMinting, setIsUserMinting] = useState(false);\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [endDate, setEndDate] = useState<Date>();\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\n  const [isPresale, setIsPresale] = useState(false);\n  const [isValidBalance, setIsValidBalance] = useState(false);\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\n\n  const [priceLabel, setPriceLabel] = useState<string>(\"SOL\");\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const refreshCandyMachineState = useCallback(\n    async (commitment: Commitment = 'confirmed') => {\n      if (!anchorWallet) {\n        return;\n      }\n\n      const connection = new Connection(props.rpcHost, commitment);\n\n      if (props.candyMachineId) {\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            connection,\n          );\n          let active =\n            cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\n          let presale = false;\n\n          // duplication of state to make sure we have the right values!\n          let isWLUser = false;\n          let userPrice = cndy.state.price;\n\n          // whitelist mint?\n          if (cndy?.state.whitelistMintSettings) {\n            // is it a presale mint?\n            if (\n              cndy.state.whitelistMintSettings.presale &&\n              (!cndy.state.goLiveDate ||\n                cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\n            ) {\n              presale = true;\n            }\n            // is there a discount?\n            if (cndy.state.whitelistMintSettings.discountPrice) {\n              setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\n              userPrice = cndy.state.whitelistMintSettings.discountPrice;\n            } else {\n              setDiscountPrice(undefined);\n              // when presale=false and discountPrice=null, mint is restricted\n              // to whitelist users only\n              if (!cndy.state.whitelistMintSettings.presale) {\n                cndy.state.isWhitelistOnly = true;\n              }\n            }\n            // retrieves the whitelist token\n            const mint = new anchor.web3.PublicKey(\n              cndy.state.whitelistMintSettings.mint,\n            );\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n              isWLUser = parseInt(balance.value.amount) > 0;\n              // only whitelist the user if the balance > 0\n              setIsWhitelistUser(isWLUser);\n\n              if (cndy.state.isWhitelistOnly) {\n                active = isWLUser && (presale || active);\n              }\n            } catch (e) {\n              setIsWhitelistUser(false);\n              // no whitelist user, no mint\n              if (cndy.state.isWhitelistOnly) {\n                active = false;\n              }\n              console.log(\n                'There was a problem fetching whitelist token balance',\n              );\n              console.log(e);\n            }\n          }\n          userPrice = isWLUser ? userPrice : cndy.state.price;\n\n          if (cndy?.state.tokenMint) {\n            // retrieves the SPL token\n            const mint = new anchor.web3.PublicKey(cndy.state.tokenMint);\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n\n              const valid = new anchor.BN(balance.value.amount).gte(userPrice);\n\n              // only allow user to mint if token balance >  the user if the balance > 0\n              setIsValidBalance(valid);\n              active = active && valid;\n            } catch (e) {\n              setIsValidBalance(false);\n              active = false;\n              // no whitelist user, no mint\n              console.log('There was a problem fetching SPL token balance');\n              console.log(e);\n            }\n          } else {\n            const balance = new anchor.BN(\n              await connection.getBalance(anchorWallet.publicKey),\n            );\n            const valid = balance.gte(userPrice);\n            setIsValidBalance(valid);\n            active = active && valid;\n            console.log(balance);\n            setBalance(await connection.getBalance(anchorWallet.publicKey) / LAMPORTS_PER_SOL);\n          }\n\n          // datetime to stop the mint?\n          if (cndy?.state.endSettings?.endSettingType.date) {\n            setEndDate(toDate(cndy.state.endSettings.number));\n            if (\n              cndy.state.endSettings.number.toNumber() <\n              new Date().getTime() / 1000\n            ) {\n              active = false;\n            }\n          }\n          // amount to stop the mint?\n          if (cndy?.state.endSettings?.endSettingType.amount) {\n            let limit = Math.min(\n              cndy.state.endSettings.number.toNumber(),\n              cndy.state.itemsAvailable,\n            );\n            if (cndy.state.itemsRedeemed < limit) {\n              setItemsRemaining(limit - cndy.state.itemsRedeemed);\n            } else {\n              setItemsRemaining(0);\n              cndy.state.isSoldOut = true;\n            }\n          } else {\n            setItemsRemaining(cndy.state.itemsRemaining);\n          }\n\n          if (cndy.state.isSoldOut) {\n            active = false;\n          }\n\n          const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\n          const collectionPDAAccount = await connection.getAccountInfo(\n            collectionPDA,\n          );\n\n          setIsActive((cndy.state.isActive = active));\n          setIsPresale((cndy.state.isPresale = presale));\n          setCandyMachine(cndy);\n          setItemsAvailable(cndy.state.itemsAvailable);\n          setItemsRemaining(cndy.state.itemsRemaining);\n          setItemsRedeemed(cndy.state.itemsRedeemed);\n\n          const txnEstimate =\n            892 +\n            (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\n            (cndy.state.tokenMint ? 66 : 0) +\n            (cndy.state.whitelistMintSettings ? 34 : 0) +\n            (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 34 : 0) +\n            (cndy.state.gatekeeper ? 33 : 0) +\n            (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\n\n          setNeedTxnSplit(txnEstimate > 1230);\n        } catch (e) {\n          if (e instanceof Error) {\n            if (\n              e.message === `Account does not exist ${props.candyMachineId}`\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            } else if (\n              e.message.startsWith('failed to get info about account')\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            }\n          } else {\n            setAlertState({\n              open: true,\n              message: `${e}`,\n              severity: 'error',\n              hideDuration: null,\n            });\n          }\n          console.log(e);\n        }\n      } else {\n        setAlertState({\n          open: true,\n          message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\n          severity: 'error',\n          hideDuration: null,\n        });\n      }\n    },\n    [anchorWallet, props.candyMachineId, props.rpcHost],\n  );\n\n  const onMint = async (\n    beforeTransactions: Transaction[] = [],\n    afterTransactions: Transaction[] = [],\n  ) => {\n    try {\n      setIsUserMinting(true);\n      document.getElementById('#identity')?.click();\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        let setupMint: SetupState | undefined;\n        if (needTxnSplit && setupTxn === undefined) {\n          setAlertState({\n            open: true,\n            message: 'Please sign account setup transaction',\n            severity: 'info',\n          });\n          setupMint = await createAccountsForMint(\n            candyMachine,\n            wallet.publicKey,\n          );\n          let status: any = { err: true };\n          if (setupMint.transaction) {\n            status = await awaitTransactionSignatureConfirmation(\n              setupMint.transaction,\n              props.txTimeout,\n              props.connection,\n              true,\n            );\n          }\n          if (status && !status.err) {\n            setSetupTxn(setupMint);\n            setAlertState({\n              open: true,\n              message:\n                'Setup transaction succeeded! Please sign minting transaction',\n              severity: 'info',\n            });\n          } else {\n            setAlertState({\n              open: true,\n              message: 'Mint failed! Please try again!',\n              severity: 'error',\n            });\n            setIsUserMinting(false);\n            return;\n          }\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Please sign minting transaction',\n            severity: 'info',\n          });\n        }\n\n        let mintResult = await mintOneToken(\n          candyMachine,\n          wallet.publicKey,\n          beforeTransactions,\n          afterTransactions,\n          setupMint ?? setupTxn,\n        );\n\n        let status: any = { err: true };\n        let metadataStatus = null;\n        if (mintResult) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintResult.mintTxId,\n            props.txTimeout,\n            props.connection,\n            true,\n          );\n\n          metadataStatus =\n            await candyMachine.program.provider.connection.getAccountInfo(\n              mintResult.metadataKey,\n              'processed',\n            );\n          console.log('Metadata status: ', !!metadataStatus);\n        }\n\n        if (status && !status.err && metadataStatus) {\n          // manual update since the refresh might not detect\n          // the change immediately\n          let remaining = itemsRemaining! - 1;\n          setItemsRemaining(remaining);\n          setIsActive((candyMachine.state.isActive = remaining > 0));\n          candyMachine.state.isSoldOut = remaining === 0;\n          setSetupTxn(undefined);\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n            hideDuration: 7000,\n          });\n          refreshCandyMachineState('processed');\n        } else if (status && !status.err) {\n          setAlertState({\n            open: true,\n            message:\n              'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',\n            severity: 'error',\n            hideDuration: 8000,\n          });\n          refreshCandyMachineState();\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n          refreshCandyMachineState();\n        }\n      }\n    } catch (error: any) {\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction timeout! Please try again.';\n        } else if (error.message.indexOf('0x137')) {\n          console.log(error);\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          console.log(error);\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n      // updates the candy machine state to reflect the latest\n      // information on chain\n      refreshCandyMachineState();\n    } finally {\n      setIsUserMinting(false);\n    }\n  };\n\n  const toggleMintButton = () => {\n    let active = !isActive || isPresale;\n\n    if (active) {\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\n        active = false;\n      }\n      if (endDate && Date.now() >= endDate.getTime()) {\n        active = false;\n      }\n    }\n\n    if (\n      isPresale &&\n      candyMachine!.state.goLiveDate &&\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\n    ) {\n      setIsPresale((candyMachine!.state.isPresale = false));\n    }\n\n    setIsActive((candyMachine!.state.isActive = active));\n  };\n\n  useEffect(() => {\n    refreshCandyMachineState();\n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    refreshCandyMachineState,\n  ]);\n\n  useEffect(() => {\n    (function loop() {\n      setTimeout(() => {\n        refreshCandyMachineState();\n        loop();\n      }, 20000);\n    })();\n  }, [refreshCandyMachineState]);\n\n  console.log(wallet);\n\n  return (\n    // <TestComponent></TestComponent>\n    <main>\n      <Header wallet={wallet}></Header>\n      <MainContainer>\n        <KoalasImg/>\n        <TextContainer>\n          <TextTitle>\n            Say hello to the our RareKoalas\n          </TextTitle>\n          <TextSubTitle>\n            A collection of 10,000 unique, generative, fun and peaceful NFT koalas minted on the Solana blockchain. These RareKoalas are both an opportunity to help an endangered species of koalas by donating money to a fund to protect them.\n          </TextSubTitle>\n\n        </TextContainer>\n\n        <ButtonsContainer>\n          {!wallet.connected ?\n            (\n              <ConnectWalletBtn>\n                <ConnectWalletIcon>\n                </ConnectWalletIcon>\n                <ConnectWalletText>\n                  Connect wallet\n                </ConnectWalletText>\n\n              </ConnectWalletBtn>\n            ) : (\n              <>\n                {candyMachine?.state.isActive &&\n                  candyMachine?.state.gatekeeper &&\n                  wallet.publicKey &&\n                  wallet.signTransaction ? (\n                  <GatewayProvider\n                    wallet={{\n                      publicKey:\n                        wallet.publicKey ||\n                        new PublicKey(CANDY_MACHINE_PROGRAM),\n                      //@ts-ignore\n                      signTransaction: wallet.signTransaction,\n                    }}\n                    gatekeeperNetwork={\n                      candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                    }\n                    clusterUrl={\n                      props.network === WalletAdapterNetwork.Devnet\n                        ? 'https://api.devnet.solana.com'\n                        : rpcUrl\n                    }\n                    handleTransaction={async (transaction: Transaction) => {\n                      setIsUserMinting(true);\n                      const userMustSign = transaction.signatures.find(sig =>\n                        sig.publicKey.equals(wallet.publicKey!),\n                      );\n                      if (userMustSign) {\n                        setAlertState({\n                          open: true,\n                          message: 'Please sign one-time Civic Pass issuance',\n                          severity: 'info',\n                        });\n                        try {\n                          transaction = await wallet.signTransaction!(\n                            transaction,\n                          );\n                        } catch (e) {\n                          setAlertState({\n                            open: true,\n                            message: 'User cancelled signing',\n                            severity: 'error',\n                          });\n                          // setTimeout(() => window.location.reload(), 2000);\n                          setIsUserMinting(false);\n                          throw e;\n                        }\n                      } else {\n                        setAlertState({\n                          open: true,\n                          message: 'Refreshing Civic Pass',\n                          severity: 'info',\n                        });\n                      }\n                      try {\n                        await sendTransaction(\n                          props.connection,\n                          wallet,\n                          transaction,\n                          [],\n                          true,\n                          'confirmed',\n                        );\n                        setAlertState({\n                          open: true,\n                          message: 'Please sign minting',\n                          severity: 'info',\n                        });\n                      } catch (e) {\n                        setAlertState({\n                          open: true,\n                          message:\n                            'Solana dropped the transaction, please try again',\n                          severity: 'warning',\n                        });\n                        console.error(e);\n                        // setTimeout(() => window.location.reload(), 2000);\n                        setIsUserMinting(false);\n                        throw e;\n                      }\n                      await onMint();\n                    }}\n                    broadcastTransaction={false}\n                    options={{ autoShowModal: false }}\n                  >\n                    <MintButton\n                      candyMachine={candyMachine}\n                      isMinting={isUserMinting}\n                      setIsMinting={val => setIsUserMinting(val)}\n                      onMint={onMint}\n                      isActive={\n                        isActive ||\n                        (isPresale && isWhitelistUser && isValidBalance)\n                      }\n                    />\n                  </GatewayProvider>\n                ) : (\n                  <MintButton\n                    candyMachine={candyMachine}\n                    isMinting={isUserMinting}\n                    setIsMinting={val => setIsUserMinting(val)}\n                    onMint={onMint}\n                    isActive={\n                      isActive ||\n                      (isPresale && isWhitelistUser && isValidBalance)\n                    }\n                  />\n                )}\n              </>\n            )}\n\n\n\n\n\n        </ButtonsContainer>\n        <SolanaFeaturedContainer>\n\n          <SolanaText>\n            Based on\n          </SolanaText>\n          <a href=\"https://solana.com\">\n            <SolanaLogo>\n\n            </SolanaLogo>\n          </a>\n        </SolanaFeaturedContainer>\n\n\n      </MainContainer>\n\n      <WhatIs></WhatIs>\n      <RareScreen></RareScreen>\n      <RoadmapScreen></RoadmapScreen>\n      <TeamScreen></TeamScreen>\n    </main>\n    // <main>\n    //   {/* <MainContainer> */}\n    //    {/* <CollectionPreviewComponent></CollectionPreviewComponent> */}\n    //    <TestComponent></TestComponent>\n    //   {/* </MainContainer> */}\n\n    //   <Snackbar\n    //     open={alertState.open}\n    //     autoHideDuration={\n    //       alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n    //     }\n    //     onClose={() => setAlertState({ ...alertState, open: false })}\n    //   >\n    //     <Alert\n    //       onClose={() => setAlertState({ ...alertState, open: false })}\n    //       severity={alertState.severity}\n    //     >\n    //       {alertState.message}\n    //     </Alert>\n    //   </Snackbar>\n    //   {/* </Container> */}\n    // </main>\n  );\n};\n\nconst getCountdownDate = (\n  candyMachine: CandyMachineAccount,\n): Date | undefined => {\n  if (\n    candyMachine.state.isActive &&\n    candyMachine.state.endSettings?.endSettingType.date\n  ) {\n    return toDate(candyMachine.state.endSettings.number);\n  }\n\n  return toDate(\n    candyMachine.state.goLiveDate\n      ? candyMachine.state.goLiveDate\n      : candyMachine.state.isPresale\n        ? new anchor.BN(new Date().getTime() / 1000)\n        : undefined,\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport { useMemo } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport Home from './Home';\nimport { DEFAULT_TIMEOUT } from './connection';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from '@solana/wallet-adapter-wallets';\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\n\n// import { ThemeProvider, createTheme } from '@material-ui/core';\nimport { ThemeProvider } from 'styled-components';\n\n// const theme = createTheme({\n//   palette: {\n//     type: 'dark',\n//   },\n// });\nconst theme = {\n  palette: {\n    type: 'dark'\n  },\n  colors: {\n      black: \"rgba(0,0,0,1)\",\n      gray: \"rgba(125,125,125,1)\",\n      transparentWhite: \"rgba(255,255,255,0.24)\",\n      white: \"rgba(255,255,255,1)\"\n    },\n    fonts: {\n      inter16Medium: {\n        family: \"Inter\",\n        size: \"16px\",\n        weight: \"500\",\n        lineHeight: \"22px\"\n      },\n      inter24Medium: {\n        family: \"Inter\",\n        size: \"24px\",\n        weight: \"500\",\n        lineHeight: \"34px\"\n      },\n      inter24SemiBold: {\n        family: \"Inter\",\n        size: \"24px\",\n        weight: \"600\",\n        lineHeight: \"34px\"\n      },\n      inter48SemiBold: {\n        family: \"Inter\",\n        size: \"48px\",\n        weight: \"600\",\n        lineHeight: \"67px\"\n      }\n    }\n}\n\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\n    );\n\n    return candyMachineId;\n  } catch (e) {\n    console.log('Failed to construct CandyMachineId', e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(\n  rpcHost ? rpcHost : anchor.web3.clusterApiUrl('devnet'),\n);\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      getSlopeWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletDialogProvider>\n            <Home\n              candyMachineId={candyMachineId}\n              connection={connection}\n              txTimeout={DEFAULT_TIMEOUT}\n              rpcHost={rpcHost}\n              network={network}\n            />\n          </WalletDialogProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as anchor from '@project-serum/anchor';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { SystemProgram } from '@solana/web3.js';\nimport {\n  LAMPORTS_PER_SOL,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nexport interface AlertState {\n  open: boolean;\n  message: string;\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\n  hideDuration?: number | null;\n}\n\nexport const toDate = (value?: anchor.BN) => {\n  if (!value) {\n    return;\n  }\n\n  return new Date(value.toNumber() * 1000);\n};\n\nconst numberFormater = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport const formatNumber = {\n  format: (val?: number) => {\n    if (!val) {\n      return '--';\n    }\n\n    return numberFormater.format(val);\n  },\n  asNumber: (val?: anchor.BN) => {\n    if (!val) {\n      return undefined;\n    }\n\n    return val.toNumber() / LAMPORTS_PER_SOL;\n  },\n};\n\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n\nexport const CIVIC = new anchor.web3.PublicKey(\n  'gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs',\n);\n\nexport const getAtaForMint = async (\n  mint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n  );\n};\n\nexport const getNetworkExpire = async (\n  gatekeeperNetwork: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [gatekeeperNetwork.toBuffer(), Buffer.from('expire')],\n    CIVIC,\n  );\n};\n\nexport const getNetworkToken = async (\n  wallet: anchor.web3.PublicKey,\n  gatekeeperNetwork: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      wallet.toBuffer(),\n      Buffer.from('gateway'),\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\n      gatekeeperNetwork.toBuffer(),\n    ],\n    CIVIC,\n  );\n};\n\nexport function createAssociatedTokenAccountInstruction(\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) {\n  const keys = [\n    {\n      pubkey: payer,\n      isSigner: true,\n      isWritable: true,\n    },\n    {\n      pubkey: associatedTokenAddress,\n      isSigner: false,\n      isWritable: true,\n    },\n    {\n      pubkey: walletAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: splTokenMintAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n","import {\n  Keypair,\n  Commitment,\n  Connection,\n  RpcResponseAndContext,\n  SignatureStatus,\n  SimulatedTransactionResponse,\n  Transaction,\n  TransactionInstruction,\n  TransactionSignature,\n  Blockhash,\n  FeeCalculator,\n} from '@solana/web3.js';\n\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\n\ninterface BlockhashAndFeeCalculator {\n  blockhash: Blockhash;\n  feeCalculator: FeeCalculator;\n}\n\nexport const DEFAULT_TIMEOUT = 60000;\n\nexport const getErrorForTransaction = async (\n  connection: Connection,\n  txid: string,\n) => {\n  // wait for all confirmation before geting transaction\n  await connection.confirmTransaction(txid, 'max');\n\n  const tx = await connection.getParsedConfirmedTransaction(txid);\n\n  const errors: string[] = [];\n  if (tx?.meta && tx.meta.logMessages) {\n    tx.meta.logMessages.forEach(log => {\n      const regex = /Error: (.*)/gm;\n      let m;\n      while ((m = regex.exec(log)) !== null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === regex.lastIndex) {\n          regex.lastIndex++;\n        }\n\n        if (m.length > 1) {\n          errors.push(m[1]);\n        }\n      }\n    });\n  }\n\n  return errors;\n};\n\nexport enum SequenceType {\n  Sequential,\n  Parallel,\n  StopOnFailure,\n}\n\nexport async function sendTransactionsWithManualRetry(\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[][],\n  signers: Keypair[][],\n): Promise<(string | undefined)[]> {\n  let stopPoint = 0;\n  let tries = 0;\n  let lastInstructionsLength = null;\n  let toRemoveSigners: Record<number, boolean> = {};\n  instructions = instructions.filter((instr, i) => {\n    if (instr.length > 0) {\n      return true;\n    } else {\n      toRemoveSigners[i] = true;\n      return false;\n    }\n  });\n  let ids: string[] = [];\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\n\n  while (stopPoint < instructions.length && tries < 3) {\n    instructions = instructions.slice(stopPoint, instructions.length);\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\n\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\n    else tries = 0;\n\n    try {\n      if (instructions.length === 1) {\n        const id = await sendTransactionWithRetry(\n          connection,\n          wallet,\n          instructions[0],\n          filteredSigners[0],\n          'single',\n        );\n        ids.push(id.txid);\n        stopPoint = 1;\n      } else {\n        const { txs } = await sendTransactions(\n          connection,\n          wallet,\n          instructions,\n          filteredSigners,\n          SequenceType.StopOnFailure,\n          'single',\n        );\n        ids = ids.concat(txs.map(t => t.txid));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    console.log(\n      'Died on ',\n      stopPoint,\n      'retrying from instruction',\n      instructions[stopPoint],\n      'instructions length is',\n      instructions.length,\n    );\n    lastInstructionsLength = instructions.length;\n  }\n\n  return ids;\n}\n\nexport const sendTransactions = async (\n  connection: Connection,\n  wallet: any,\n  instructionSet: TransactionInstruction[][],\n  signersSet: Keypair[][],\n  sequenceType: SequenceType = SequenceType.Parallel,\n  commitment: Commitment = 'singleGossip',\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\n  block?: BlockhashAndFeeCalculator,\n  beforeTransactions: Transaction[] = [],\n  afterTransactions: Transaction[] = [],\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  const unsignedTxns: Transaction[] = beforeTransactions;\n\n  if (!block) {\n    block = await connection.getRecentBlockhash(commitment);\n  }\n\n  for (let i = 0; i < instructionSet.length; i++) {\n    const instructions = instructionSet[i];\n    const signers = signersSet[i];\n\n    if (instructions.length === 0) {\n      continue;\n    }\n\n    let transaction = new Transaction();\n    instructions.forEach(instruction => transaction.add(instruction));\n    transaction.recentBlockhash = block.blockhash;\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n\n    if (signers.length > 0) {\n      transaction.partialSign(...signers);\n    }\n\n    unsignedTxns.push(transaction);\n  }\n  unsignedTxns.push(...afterTransactions);\n\n  const partiallySignedTransactions = unsignedTxns.filter(t =>\n    t.signatures.find(sig => sig.publicKey.equals(wallet.publicKey)),\n  );\n  const fullySignedTransactions = unsignedTxns.filter(\n    t => !t.signatures.find(sig => sig.publicKey.equals(wallet.publicKey)),\n  );\n  let signedTxns = await wallet.signAllTransactions(\n    partiallySignedTransactions,\n  );\n  signedTxns = fullySignedTransactions.concat(signedTxns);\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\n\n  console.log(\n    'Signed txns length',\n    signedTxns.length,\n    'vs handed in length',\n    instructionSet.length,\n  );\n  for (let i = 0; i < signedTxns.length; i++) {\n    const signedTxnPromise = sendSignedTransaction({\n      connection,\n      signedTransaction: signedTxns[i],\n    });\n\n    if (sequenceType !== SequenceType.Parallel) {\n      try {\n        await signedTxnPromise.then(({ txid, slot }) =>\n          successCallback(txid, i),\n        );\n        pendingTxns.push(signedTxnPromise);\n      } catch (e) {\n        console.log('Failed at txn index:', i);\n        console.log('Caught failure:', e);\n\n        failCallback(signedTxns[i], i);\n        if (sequenceType === SequenceType.StopOnFailure) {\n          return {\n            number: i,\n            txs: await Promise.all(pendingTxns),\n          };\n        }\n      }\n    } else {\n      pendingTxns.push(signedTxnPromise);\n    }\n  }\n\n  if (sequenceType !== SequenceType.Parallel) {\n    const result = await Promise.all(pendingTxns);\n    return { number: signedTxns.length, txs: result };\n  }\n\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\n};\n\nexport const sendTransaction = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[] | Transaction,\n  signers: Keypair[],\n  awaitConfirmation = true,\n  commitment: Commitment = 'singleGossip',\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator,\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction: Transaction;\n  if (instructions instanceof Transaction) {\n    transaction = instructions;\n  } else {\n    transaction = new Transaction();\n    instructions.forEach(instruction => transaction.add(instruction));\n    transaction.recentBlockhash = (\n      block || (await connection.getRecentBlockhash(commitment))\n    ).blockhash;\n\n    if (includesFeePayer) {\n      transaction.setSigners(...signers.map(s => s.publicKey));\n    } else {\n      transaction.setSigners(\n        // fee payed by the wallet owner\n        wallet.publicKey,\n        ...signers.map(s => s.publicKey),\n      );\n    }\n\n    if (signers.length > 0) {\n      transaction.partialSign(...signers);\n    }\n    if (!includesFeePayer) {\n      transaction = await wallet.signTransaction(transaction);\n    }\n  }\n\n  const rawTransaction = transaction.serialize();\n  let options = {\n    skipPreflight: true,\n    commitment,\n  };\n\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\n  let slot = 0;\n\n  if (awaitConfirmation) {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      DEFAULT_TIMEOUT,\n      connection,\n      commitment,\n    );\n\n    if (!confirmation)\n      throw new Error('Timed out awaiting confirmation on transaction');\n    slot = confirmation?.slot || 0;\n\n    if (confirmation?.err) {\n      const errors = await getErrorForTransaction(connection, txid);\n\n      console.log(errors);\n      throw new Error(`Raw transaction ${txid} failed`);\n    }\n  }\n\n  return { txid, slot };\n};\n\nexport const sendTransactionWithRetry = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[],\n  signers: Keypair[],\n  commitment: Commitment = 'singleGossip',\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator,\n  beforeSend?: () => void,\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction = new Transaction();\n  instructions.forEach(instruction => transaction.add(instruction));\n  transaction.recentBlockhash = (\n    block || (await connection.getRecentBlockhash(commitment))\n  ).blockhash;\n\n  if (includesFeePayer) {\n    transaction.setSigners(...signers.map(s => s.publicKey));\n  } else {\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n  }\n\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  if (!includesFeePayer) {\n    transaction = await wallet.signTransaction(transaction);\n  }\n\n  if (beforeSend) {\n    beforeSend();\n  }\n\n  const { txid, slot } = await sendSignedTransaction({\n    connection,\n    signedTransaction: transaction,\n  });\n\n  return { txid, slot };\n};\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<{ txid: string; slot: number }> {\n  const rawTransaction = signedTransaction.serialize();\n\n  const startTime = getUnixTs();\n  let slot = 0;\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(500);\n    }\n  })();\n  try {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      timeout,\n      connection,\n      'recent',\n      true,\n    );\n\n    if (!confirmation)\n      throw new Error('Timed out awaiting confirmation on transaction');\n\n    if (confirmation.err) {\n      console.error(confirmation.err);\n      throw new Error('Transaction failed: Custom instruction error');\n    }\n\n    slot = confirmation?.slot || 0;\n  } catch (err: any) {\n    console.error('Timeout Error caught', err);\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    // throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return { txid, slot };\n}\n\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n  commitment: Commitment = 'recent',\n  queryStatus = false,\n): Promise<SignatureStatus | null | void> {\n  let done = false;\n  let status: SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result, context) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log('Rejected via websocket', result.err);\n            reject(status);\n          } else {\n            console.log('Resolved via websocket', result);\n            resolve(status);\n          }\n        },\n        commitment,\n      );\n    } catch (e) {\n      done = true;\n      console.error('WS error in setup', txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId])\n    connection.removeSignatureListener(subId);\n  done = true;\n  console.log('Returning status', status);\n  return status;\n}\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import * as anchor from '@project-serum/anchor';\n\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport {\n  SystemProgram,\n  Transaction,\n  SYSVAR_SLOT_HASHES_PUBKEY,\n} from '@solana/web3.js';\nimport { sendTransactions, SequenceType } from './connection';\n\nimport {\n  CIVIC,\n  getAtaForMint,\n  getNetworkExpire,\n  getNetworkToken,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from './utils';\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\ninterface CandyMachineState {\n  authority: anchor.web3.PublicKey;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: null | anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  isPresale: boolean;\n  isWhitelistOnly: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n  gatekeeper: null | {\n    expireOnUse: boolean;\n    gatekeeperNetwork: anchor.web3.PublicKey;\n  };\n  endSettings: null | {\n    number: anchor.BN;\n    endSettingType: any;\n  };\n  whitelistMintSettings: null | {\n    mode: any;\n    mint: anchor.web3.PublicKey;\n    presale: boolean;\n    discountPrice: null | anchor.BN;\n  };\n  hiddenSettings: null | {\n    name: string;\n    uri: string;\n    hash: Uint8Array;\n  };\n  retainAuthority: boolean;\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log('Returning status', status);\n  return status;\n};\n\nconst createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'processed',\n  });\n\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n\n  const program = new anchor.Program(idl!, CANDY_MACHINE_PROGRAM, provider);\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      authority: state.authority,\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive: false,\n      isPresale: false,\n      isWhitelistOnly: false,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      gatekeeper: state.data.gatekeeper,\n      endSettings: state.data.endSettings,\n      whitelistMintSettings: state.data.whitelistMintSettings,\n      hiddenSettings: state.data.hiddenSettings,\n      price: state.data.price,\n      retainAuthority: state.data.retainAuthority,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getCandyMachineCreator = async (\n  candyMachine: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\n    CANDY_MACHINE_PROGRAM,\n  );\n};\n\nexport const getCollectionPDA = async (\n  candyMachineAddress: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('collection'), candyMachineAddress.toBuffer()],\n    CANDY_MACHINE_PROGRAM,\n  );\n};\n\nexport interface CollectionData {\n  mint: anchor.web3.PublicKey;\n  candyMachine: anchor.web3.PublicKey;\n}\n\nexport const getCollectionAuthorityRecordPDA = async (\n  mint: anchor.web3.PublicKey,\n  newAuthority: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('collection_authority'),\n        newAuthority.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport type SetupState = {\n  mint: anchor.web3.Keypair;\n  userTokenAccount: anchor.web3.PublicKey;\n  transaction: string;\n};\n\nexport const createAccountsForMint = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n): Promise<SetupState> => {\n  const mint = anchor.web3.Keypair.generate();\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const signers: anchor.web3.Keypair[] = [mint];\n  const instructions = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    ),\n  ];\n\n  return {\n    mint: mint,\n    userTokenAccount: userTokenAccountAddress,\n    transaction: (\n      await sendTransactions(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        [instructions],\n        [signers],\n        SequenceType.StopOnFailure,\n        'singleGossip',\n        () => {},\n        () => false,\n        undefined,\n        [],\n        [],\n      )\n    ).txs[0].txid,\n  };\n};\n\ntype MintResult = {\n  mintTxId: string;\n  metadataKey: anchor.web3.PublicKey;\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n  beforeTransactions: Transaction[] = [],\n  afterTransactions: Transaction[] = [],\n  setupState?: SetupState,\n): Promise<MintResult | null> => {\n  const mint = setupState?.mint ?? anchor.web3.Keypair.generate();\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = candyMachine.state.tokenMint\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\n    : payer;\n\n  const candyMachineAddress = candyMachine.id;\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers: anchor.web3.Keypair[] = [];\n  console.log('SetupState: ', setupState);\n  if (!setupState) {\n    signers.push(mint);\n    instructions.push(\n      ...[\n        anchor.web3.SystemProgram.createAccount({\n          fromPubkey: payer,\n          newAccountPubkey: mint.publicKey,\n          space: MintLayout.span,\n          lamports:\n            await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n              MintLayout.span,\n            ),\n          programId: TOKEN_PROGRAM_ID,\n        }),\n        Token.createInitMintInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          0,\n          payer,\n          payer,\n        ),\n        createAssociatedTokenAccountInstruction(\n          userTokenAccountAddress,\n          payer,\n          payer,\n          mint.publicKey,\n        ),\n        Token.createMintToInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          userTokenAccountAddress,\n          payer,\n          [],\n          1,\n        ),\n      ],\n    );\n  }\n\n  if (candyMachine.state.gatekeeper) {\n    remainingAccounts.push({\n      pubkey: (\n        await getNetworkToken(\n          payer,\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.gatekeeper.expireOnUse) {\n      remainingAccounts.push({\n        pubkey: CIVIC,\n        isWritable: false,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getNetworkExpire(\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\n          )\n        )[0],\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n  }\n  if (candyMachine.state.whitelistMintSettings) {\n    const mint = new anchor.web3.PublicKey(\n      candyMachine.state.whitelistMintSettings.mint,\n    );\n\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\n    remainingAccounts.push({\n      pubkey: whitelistToken,\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\n      remainingAccounts.push({\n        pubkey: mint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: payer,\n        isWritable: false,\n        isSigner: true,\n      });\n    }\n  }\n\n  if (candyMachine.state.tokenMint) {\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: payer,\n      isWritable: false,\n      isSigner: true,\n    });\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\n    candyMachineAddress,\n  );\n\n  console.log(remainingAccounts.map(rm => rm.pubkey.toBase58()));\n  instructions.push(\n    await candyMachine.program.instruction.mintNft(creatorBump, {\n      accounts: {\n        candyMachine: candyMachineAddress,\n        candyMachineCreator,\n        payer: payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        recentBlockhashes: SYSVAR_SLOT_HASHES_PUBKEY,\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n\n  const [collectionPDA] = await getCollectionPDA(candyMachineAddress);\n  const collectionPDAAccount =\n    await candyMachine.program.provider.connection.getAccountInfo(\n      collectionPDA,\n    );\n\n  if (collectionPDAAccount && candyMachine.state.retainAuthority) {\n    try {\n      const collectionData =\n        (await candyMachine.program.account.collectionPda.fetch(\n          collectionPDA,\n        )) as CollectionData;\n      console.log(collectionData);\n      const collectionMint = collectionData.mint;\n      const collectionAuthorityRecord = await getCollectionAuthorityRecordPDA(\n        collectionMint,\n        collectionPDA,\n      );\n      console.log(collectionMint);\n      if (collectionMint) {\n        const collectionMetadata = await getMetadata(collectionMint);\n        const collectionMasterEdition = await getMasterEdition(collectionMint);\n        console.log('Collection PDA: ', collectionPDA.toBase58());\n        console.log('Authority: ', candyMachine.state.authority.toBase58());\n        instructions.push(\n          await candyMachine.program.instruction.setCollectionDuringMint({\n            accounts: {\n              candyMachine: candyMachineAddress,\n              metadata: metadataAddress,\n              payer: payer,\n              collectionPda: collectionPDA,\n              tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n              instructions: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n              collectionMint,\n              collectionMetadata,\n              collectionMasterEdition,\n              authority: candyMachine.state.authority,\n              collectionAuthorityRecord,\n            },\n          }),\n        );\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const instructionsMatrix = [instructions];\n  const signersMatrix = [signers];\n\n  try {\n    const txns = (\n      await sendTransactions(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        instructionsMatrix,\n        signersMatrix,\n        SequenceType.StopOnFailure,\n        'singleGossip',\n        () => {},\n        () => false,\n        undefined,\n        beforeTransactions,\n        afterTransactions,\n      )\n    ).txs.map(t => t.txid);\n    const mintTxn = txns[0];\n    return {\n      mintTxId: mintTxn,\n      metadataKey: metadataAddress,\n    };\n  } catch (e) {\n    console.log(e);\n  }\n  return null;\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n"],"sourceRoot":""}